//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebShopClient.WebShopService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/WebShopService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebShopService.IWebShopService")]
    public interface IWebShopService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/GetName", ReplyAction="http://tempuri.org/IWebShopService/GetNameResponse")]
        string GetName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/GetName", ReplyAction="http://tempuri.org/IWebShopService/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/GetProductInfo", ReplyAction="http://tempuri.org/IWebShopService/GetProductInfoResponse")]
        string GetProductInfo(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/GetProductInfo", ReplyAction="http://tempuri.org/IWebShopService/GetProductInfoResponse")]
        System.Threading.Tasks.Task<string> GetProductInfoAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/BuyProduct", ReplyAction="http://tempuri.org/IWebShopService/BuyProductResponse")]
        bool BuyProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/BuyProduct", ReplyAction="http://tempuri.org/IWebShopService/BuyProductResponse")]
        System.Threading.Tasks.Task<bool> BuyProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/GetProductList", ReplyAction="http://tempuri.org/IWebShopService/GetProductListResponse")]
        WebShopClient.WebShopService.Product[] GetProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/GetProductList", ReplyAction="http://tempuri.org/IWebShopService/GetProductListResponse")]
        System.Threading.Tasks.Task<WebShopClient.WebShopService.Product[]> GetProductListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/RefreshProductStock", ReplyAction="http://tempuri.org/IWebShopService/RefreshProductStockResponse")]
        int RefreshProductStock(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebShopService/RefreshProductStock", ReplyAction="http://tempuri.org/IWebShopService/RefreshProductStockResponse")]
        System.Threading.Tasks.Task<int> RefreshProductStockAsync(int productId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebShopServiceChannel : WebShopClient.WebShopService.IWebShopService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebShopServiceClient : System.ServiceModel.ClientBase<WebShopClient.WebShopService.IWebShopService>, WebShopClient.WebShopService.IWebShopService {
        
        public WebShopServiceClient() {
        }
        
        public WebShopServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebShopServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebShopServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebShopServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetName() {
            return base.Channel.GetName();
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync() {
            return base.Channel.GetNameAsync();
        }
        
        public string GetProductInfo(int productId) {
            return base.Channel.GetProductInfo(productId);
        }
        
        public System.Threading.Tasks.Task<string> GetProductInfoAsync(int productId) {
            return base.Channel.GetProductInfoAsync(productId);
        }
        
        public bool BuyProduct(int productId) {
            return base.Channel.BuyProduct(productId);
        }
        
        public System.Threading.Tasks.Task<bool> BuyProductAsync(int productId) {
            return base.Channel.BuyProductAsync(productId);
        }
        
        public WebShopClient.WebShopService.Product[] GetProductList() {
            return base.Channel.GetProductList();
        }
        
        public System.Threading.Tasks.Task<WebShopClient.WebShopService.Product[]> GetProductListAsync() {
            return base.Channel.GetProductListAsync();
        }
        
        public int RefreshProductStock(int productId) {
            return base.Channel.RefreshProductStock(productId);
        }
        
        public System.Threading.Tasks.Task<int> RefreshProductStockAsync(int productId) {
            return base.Channel.RefreshProductStockAsync(productId);
        }
    }
}
